name: Documentation - Data Persistence & Storage

on:
  workflow_dispatch:
    inputs:
      focus_area:
        description: 'Specific data layer to focus on'
        required: false
        type: choice
        options:
          - 'all'
          - 'sqlx-patterns'
          - 'redis-caching'
          - 'persistence-operations'
          - 'database-schemas'
        default: 'all'
  schedule:
    # Run daily at 5 AM UTC
    - cron: '0 5 * * *'
  push:
    paths:
      - 'ms-framework-docs/data-management/*persistence*.md'
      - 'ms-framework-docs/data-management/*database*.md'
      - 'ms-framework-docs/data-management/*storage*.md'
      - 'ms-framework-docs/data-management/postgresql-implementation.md'
      - 'ms-framework-docs/data-management/jetstream-kv.md'

jobs:
  improve-data-docs:
    name: Improve Data Persistence Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="docs/data-persistence-improvements-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Improve SQLx Patterns Documentation
        if: github.event.inputs.focus_area == 'all' || github.event.inputs.focus_area == 'sqlx-patterns'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-sonnet-4-20250514"
          direct_prompt: |
            You are improving the MisterSmith framework SQLx database documentation.
            
            CONTEXT7 LIBRARY REFERENCES:
            - sqlx v0.8.2 (/launchbadge/sqlx) - SQL toolkit
            - Features: ["runtime-tokio-rustls", "postgres", "sqlite", "any"]
            
            TASK: Improve ms-framework-docs/data-management/postgresql-implementation.md by:
            
            1. Use Context7 to get REAL SQLx v0.8.2 code:
               - Search for "sqlx pool postgres"
               - Search for "sqlx query macro"
               - Search for "sqlx transaction"
               - Search for "sqlx migrate"
               - Get actual database code examples
            
            2. Take the REAL SQLx code and adapt:
               - Convert actual pool configs to pseudocode
               - Use real query! macro patterns
               - Base transactions on actual SQLx examples
               - Keep real error handling patterns
               - Use actual migration code structure
            
            3. Also update database-schemas.md with:
               - Agent state tables based on real schemas
               - Message queue tables from actual implementations
               - Event sourcing patterns from real code
               - Audit structures from production examples
            
            4. Ensure consistency with:
               - data-persistence.md
               - persistence-operations.md
               - storage-patterns.md
            
            IMPORTANT: Use Context7's actual SQLx examples,
            convert to pseudocode preserving real SQL patterns.
      
      - name: Improve Redis Caching Documentation
        if: github.event.inputs.focus_area == 'all' || github.event.inputs.focus_area == 'redis-caching'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-sonnet-4-20250514"
          direct_prompt: |
            You are improving the MisterSmith framework Redis documentation.
            
            CONTEXT7 LIBRARY REFERENCES:
            - redis v0.27.5 (/redis-rs/redis-rs) - Redis client
            - Features: ["tokio-comp", "connection-manager"]
            
            TASK: Create/improve Redis caching documentation by:
            
            1. Use Context7 to get REAL redis v0.27.5 code:
               - Search for "redis connection manager"
               - Search for "redis pubsub"
               - Search for "redis pipeline"
               - Search for "redis lua script"
               - Get actual Redis client usage
            
            2. If file doesn't exist, create ms-framework-docs/data-management/redis-caching.md
            3. Take the REAL Redis code and adapt:
               - Convert actual connection code to pseudocode
               - Use real pub/sub patterns from examples
               - Base locking on actual Redis implementations
               - Keep real caching patterns
               - Use actual Lua script examples
            
            4. Cross-reference with:
               - agent-communication.md (pub/sub)
               - storage-patterns.md  
               - connection-management.md
            
            5. Use REAL cache invalidation from Redis examples
            
            IMPORTANT: Use Context7's actual redis-rs examples,
            convert to pseudocode preserving real patterns.
      
      - name: Improve Persistence Operations Documentation
        if: github.event.inputs.focus_area == 'all' || github.event.inputs.focus_area == 'persistence-operations'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-sonnet-4-20250514"
          direct_prompt: |
            You are improving the MisterSmith persistence operations documentation.
            
            TASK: Improve ms-framework-docs/data-management/persistence-operations.md by:
            
            1. Search for REAL database operations code:
               - Use Context7 to find SQLx/Redis operational patterns
               - Search web for actual Rust database pooling libraries
               - Look for real production database code
            
            2. Adapt REAL operational code:
               - Use actual connection pool configs
               - Base routing on real read replica code
               - Take batching from actual implementations
               - Use real backup scripts as reference
            
            3. Include REAL operation workflows:
               - Health checks from actual monitoring code
               - Failover from real HA implementations
               - Performance tuning from actual configs
               - Index management from real DBAs
            
            4. Cross-reference with:
               - postgresql-implementation.md
               - storage-patterns.md
               - observability-monitoring-framework.md
            
            IMPORTANT: Use real production patterns,
            convert to documentation preserving actual practices.
      
      - name: Improve JetStream KV Documentation
        if: github.event.inputs.focus_area == 'all' || github.event.inputs.focus_area == 'database-schemas'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-sonnet-4-20250514"
          direct_prompt: |
            You are improving the MisterSmith JetStream KV documentation.
            
            CONTEXT: NATS JetStream KV as distributed state store
            
            TASK: Improve ms-framework-docs/data-management/jetstream-kv.md by:
            
            1. Get REAL JetStream KV code:
               - Use Context7 async-nats to search "kv bucket"
               - Search for "kv watch"
               - Search for "kv history"
               - Find actual KV usage examples
            
            2. Adapt REAL JetStream KV patterns:
               - Use actual bucket creation code
               - Take key patterns from real examples
               - Base watching on actual KV watchers
               - Use real TTL configurations
               - Keep actual revision handling
            
            3. Show integration with:
               - Agent state from real implementations
               - Config distribution from actual code
               - Service discovery from real patterns
            
            4. Cross-reference with:
               - nats-transport.md
               - agent-operations.md
               - data-persistence.md
            
            IMPORTANT: Use Context7's actual JetStream KV examples,
            convert to pseudocode preserving real patterns.
      
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "No changes made"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git add -A
            git commit -m "docs: Improve data persistence documentation
            
            - Enhanced SQLx patterns and database schemas
            - Added Redis caching strategies
            - Improved persistence operations
            - Updated JetStream KV patterns
            
            Based on Context7 library documentation:
            - sqlx v0.8.2
            - redis v0.27.5
            - NATS JetStream KV"
          fi
      
      - name: Push changes and create PR
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git push origin "${{ env.BRANCH_NAME }}"
          gh pr create \
            --title "docs: Data Persistence Documentation Improvements" \
            --body "## Data Persistence Documentation Updates
            
            This PR improves the data persistence documentation based on:
            - SQLx v0.8.2 (compile-time SQL, connection pooling)
            - Redis v0.27.5 (caching, pub/sub, distributed locks)
            - NATS JetStream KV (distributed state)
            
            ### Changes
            - Enhanced database patterns and schemas
            - Added comprehensive caching strategies
            - Improved operational procedures
            - Updated distributed state patterns
            
            ### Context7 References
            - SQLx: /launchbadge/sqlx
            - Redis: /redis-rs/redis-rs
            
            Generated by Data Persistence Documentation workflow" \
            --base main \
            --head "${{ env.BRANCH_NAME }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}